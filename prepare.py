# This will be my Data Preparation Module for my Social Vulnerability Project

########################### General Imports ####################################
import pandas as pd
import numpy as np

########################### Prepare Imports ####################################
from sklearn.model_selection import train_test_split



############### Secondary Prep #################################################

def create_target(df, ):
    '''
    This function will take in my dataframe and create a new column in the 
    dataframe as the target variable.
    '''
    # let's create a column for voter turnout as a percent of population
    df['turnout_percent'] = (df['turnout'] / df['population']).round(4)
    
    return df

def drop_extra(df):
    '''
    This function will drop all columns I now longer want to work with.
    '''
    
    df = df.drop(columns='pop_error')
    
    return df


def svi_split(df, target):
    '''
    args: df
    This function take in the zillow DataFrame after it has gone through initial 
    and secondary prep, and splits into train, validate, and test X_df(features) 
    and y (target).
    '''
    # Drop county column
    df = df.drop(columns=('county'))
    
    # Creating our train, validate, and test dataframes
    train_validate, test = train_test_split(df, test_size=.2, 
                                        random_state=1221)
    train, validate = train_test_split(train_validate, test_size=.3, 
                                   random_state=1221)
    # Split into X and y
    X_train = train.drop(columns=[target])
    y_train = train[target]
    
    X_validate = validate.drop(columns=[target])
    y_validate = validate[target]
    
    X_test = test.drop(columns=[target])
    y_test = test[target]
    
    return train, validate, test, X_train, y_train, X_validate, y_validate, X_test, y_test


    